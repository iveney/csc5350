%!PS-Adobe-2.0
%%Creator: dvips(k) 5.94b Copyright 2004 Radical Eye Software
%%Title: A3sol.dvi
%%CreationDate: Fri Dec 05 14:16:29 2008
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: rtxmi Times-Italic Times-Roman txsy
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips.exe A3sol.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2008.12.05:1416
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def% return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def% return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "30 October 2002",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse

/preview@version(11.83)def

userdict begin/preview-bop-level 0 def/bop-hook{/preview-bop-level
dup load dup 0 le{/isls false def/vsize 792 def/hsize 612 def}if 1
add store}bind def/eop-hook{/preview-bop-level dup load dup 0 gt{1
sub}if store}bind def end

/preview@tightpage true def (compatibility PostScript comment for dvipng<=1.5

userdict begin/bop-hook{7{currentfile token not{stop}if 65781.76 div
DVImag mul}repeat 72 add 72 2 copy gt{exch}if 4 2 roll neg 2 copy lt{exch}if
dup 0 gt{pop 0 exch}{exch dup 0 lt{pop 0}if}ifelse 720 add exch 720
add 3 1 roll 4{5 -1 roll add 4 1 roll}repeat <</PageSize[5 -1 roll
6 index sub 5 -1 roll 5 index sub]/PageOffset[7 -2 roll [1 1 dtransform
exch]{0 ge{neg}if exch}forall]>>setpagedevice//bop-hook exec}bind def
end

userdict (some extra code to avoid dvipng>=1.6 unknown special: 7{currentfile token not{stop}if 65781.76 div }))
pop

userdict begin/bop-hook{preview-bop-level 0 le{7{currentfile token
not{stop}if 65781.76 div DVImag mul}repeat 72 add 72 2 copy gt{exch}if
4 2 roll neg 2 copy lt{exch}if dup 0 gt{pop 0 exch}{exch dup 0 lt{pop
0}if}ifelse 720 add exch 720 add 3 1 roll 4{5 -1 roll add 4 1 roll}repeat
<</PageSize[5 -1 roll 6 index sub 5 -1 roll 5 index sub]/PageOffset[7
-2 roll [1 1 dtransform exch]{0 ge{neg}if exch}forall]>>setpagedevice}if//bop-hook
exec}bind def end
 
@fedspecial end
%%BeginFont: txsy
%!PS-AdobeFont-1.0: txsy 3.0
%%CreationDate: 12/14/2000 at 12:00 PM
%%VMusage: 1024 24296
20 dict begin
/FontInfo 16 dict dup begin
/version (3.0) readonly def
/FullName (txsy) readonly def
/FamilyName (txsy) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 3.0, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /txsy def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/UniqueID 4595112 def
/FontBBox{-22 -944 1227 866}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363F39B548A806C44FEA1B6940CE940D9715AC10
A3E7AB0FA0A6414E9568953B7FC56D7431153CDCC1DA51CB651758F01C2BE266
586E297B3119AEE2A2D643C4C75FFC401D0B85884FDF6B65F382C4274641C911
1BFA560173294C16E51F7607EDD8C402A8ACE5B8A757F2ABA6F4ED61F15798F0
710DA8F3DEA618CF1E90303ADD6DF296225CAAA74E80F135E221CC1E0CACD211
99537E50D75DC58C3DFBB212E785396B0A36C81DB4AEEB785DEB75ADF0F0818F
C0FB1D416B07244E77B355ADE61403965BF62486A2F6897C1B44E77EC37A5188
0FE0639ECE50EC308B192067C33CF1FC03C00F8630FD348DE9C17F718B341DFE
884BBB3257BB82CC9D3C52651490F47275A7DF2497B77BFA57DE4264E2D20C09
5D2C4A821CEBE92376A69C2DFA38B618BB72913813B481A979C3E5F3CD8A5CEA
C2C5726EB95C76E024C833799ACACB28A6201C90A53CDB394D570DC876A0ECE3
8ED2A82F7A1A617781BBE5E7ECA9F99198A39BE62AF74FDE0B44B1A0745D88ED
AB8F6003C4E5E9DC24349F29614784C3339DBF666B175FDD64D631625F0E0B56
B04333BA9D637A85D3C074F14F586FF842605965ABBFCF9DA50EA1C7765A1428
3858DC0B087E1633F36B0D94CBB58FA686C55114AA66B7329E036D1206A47B88
7BC73925E28B2154B2E33717A4A898FA95761E066F7FCA3E5744D229EF0A22A1
342C7C932B10DEDC2D401AFB98CFBDDF1C2408D0B24FCC82EFE8C41D40D27459
81633535923C454EF473264491BF4C932C20A40454D3AE5A79080527EBD453B7
5D33E95D26A1FCC3075BD5B962023191EB1A75BF470A021C7A9661
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: rtxmi
%!PS-AdobeFont-1.0: rtxmi 3.1
%%CreationDate: 12/15/2000 at 12:00 PM
%%VMusage: 1024 18707
20 dict begin
/FontInfo 16 dict dup begin
/version (3.1) readonly def
/FullName (rtxmi) readonly def
/FamilyName (rtxmi) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/Notice (Version 3.1, GPL) readonly def
/em 1000 def
/ascent 800 def
/descent 200 def
end readonly def
/FontName /rtxmi def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
readonly def
/PaintType 0 def
/FontType 1 def
/StrokeWidth 0 def
/FontMatrix[0.001 0 0 0.001 0 0]readonly def
/UniqueID 4524849 def
/FontBBox{-124 -214 902 762}readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CD06DFE1BE899059C588357426D7A0
7B684C079A47D271426064AD18CB9750D8A986D1D67C1B2AEEF8CE785CC19C81
DE96489F740045C5E342F02DA1C9F9F3C167651E646F1A67CF379789E311EF91
511D0F605B045B279357D6FC8537C233E7AEE6A4FDBE73E75A39EB206D20A6F6
1021961B748D419EBEEB028B592124E174CA595C108E12725B9875544955CFFD
02843723FD4914EA94CF5C86363ACB6BB4018AAA031D477F4E4FC326A950DE29
2B74DDB5BE56D4FD187204B55C27F1DB312531C570F9F34DAAED915F0C37507F
92FD04966D86D0766F17022C9394DD07F0BD1BE6A881DB0961B5AA15CC7799AF
DF915ABB030F9DCDEFF8030E69436DBAC66AF371EDA21D77827FE61EA3FAD094
AC1933A0F5B59664D9793A170C0A6188FF57F72201362946E90FCFD842A06C2A
E8A24AFC21A07485BDB30EA113475C99767726248B49D925F460825D799CDF12
44B6E8C06F075F6369531FDC627FAFBA6FCE4249B9F64AAF9ACB6CA739B70C81
7200517C0560F41166B0FCF08AE301EE9536DB8F20AE5038D63201F09AEE1D57
6DEBF8C2269479DB3B86586717F69A5179F5BDE4FBDD48C175E469717528D747
7A2BF4E20635D1644512270F60DB15BB5C340A21B4537A1DF5EA1179F7CFC884
C25C6682B29B82D49241B84C15D9B48709CBCAECB38F895170D403DE5C207FC7
0D37064EA71944BDDAE1FB609FE2CD7B531CC63FF4600FDF993CE98EACB1D8A2
53BDAC2DA7BBE8EC827BB5D1F6CD63B9AE39BA7CB75692C0405B3F34F1F92F1C
B8C16F3FCDDAC3F7AA40D2A098F9598F29A31764389482AFAB13B23248CE51DA
E8EC647727509DCE439FEDCEE7A0D6F17420134353AB45E8C8BDA9E3B1113CD9
8B0685CC6E764649F650F865A225E7AA46F71AF90F4467A2E22AE96EBFCE699D
127015DE1C3D0A6F4F07C0B5F65D57BA71AC87EA99A7C3C898D707553AA905E0
0B43988D46AB464C4FD1D88B2439FFFADDC612BC2EA607D01652BE3767D96401
808E57CB9983170BC5E236933D24278FFF3A54B71F6E1950AB190C439B0E4975
85EB0BF408E36B2F0E12B0DAC16DF1BF8056FB2B553620E44687015AEF78FE0D
36
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39139632 55387786 1000 600 600 (A3sol.dvi)
@start /Fa 255[63{}1 99.6264 /txsy rf /Fb 202[50 1[50
50 50 50 6[33 33 40[{ TeXBase1Encoding ReEncodeFont }7
99.6264 /Times-Roman rf /Fc 205[50 50 49[{
 TeXBase1Encoding ReEncodeFont }2 99.6264 /Times-Roman
rf /Fd 134[44 6[39 3[50 6[50 19[50 61 10[72 3[66 67[{
 TeXBase1Encoding ReEncodeFont }8 99.6264 /Times-Italic
rf /Fe 196[25 59[{}1 99.6264 /rtxmi rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop
-32891 -32891 32891 32891 11188200 0 14917600
 0 -1417 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 -1417 a 0 -1417 a
SDict begin [ /Producer (dvips + Distiller) /Title () /Subject () /Creator
(LaTeX with hyperref package) /Author () /Keywords () /DOCINFO pdfmark
end
 0
-1417 a 1417 x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 170.71838 85.35919 113.81226 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial
1145 -733 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.99799
neg 9.464 8.642 .5 Frame  end
 
@endspecial -2
w Fd(G)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 56.90613 85.35919 113.81226 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 678
-732 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 8.132 8.642 .5 Frame  end
 
@endspecial(R)945 -709
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.4 SLW 0  setgray  0.0 0.0 1.42265 .5 CLW
mul sub 0 360 arc closepath gsave 0.4 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 920 -739 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.98386 .5 Frame  end


@endspecial Fc(1)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 56.90613 56.90613 56.90613 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial
399 -579 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.27199
neg 6.8 6.104 .5 Frame  end
 
@endspecial Fd(g)0
0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 56.90613 113.81226 56.90613 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 408 -805 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 5.74399 6.104 .5 Frame  end
 
@endspecial(r)472 -709 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial
392 -675 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.98386 .5 Frame  end
 
@endspecial Fc(1)0
0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 170.71838 56.90613 170.71838 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 1441 -579
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.27199
neg 6.8 6.104 .5 Frame  end
 
@endspecial Fd(g)0 0 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 170.71838 113.81226 170.71838 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 1441 -805 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 5.74399 6.104 .5 Frame  end


@endspecial(r)1417 -709 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial 1448
-675 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.98386 .5 Frame  end
 
@endspecial Fc(1)0
0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 85.35919 142.26532 56.90613 113.81226  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 614 -996 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.89
neg 6.8 6.104 .5 Frame  end
 
@endspecial Fd(n)542 -1253
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 41.05595 8.82799 .5 Frame  end
 
@endspecial Fb(\()p Fa(\000)p
Fb(1)p Fe(;)17 b Fa(\000)p Fb(1\))0 0 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 28.45306 142.26532 56.90613 113.81226  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 287 -996 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.27199
neg 6.128 6.104 .5 Frame  end


@endspecial Fd(y)132 -1253 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end


@endspecial Fb(\(3)p Fe(;)g Fb(3\))472 -945 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial
30 x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 0.8 0.8 .5 Frame  end
 
@endspecial 0 0 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 199.17145 142.26532 170.71838 113.81226  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap
stroke  grestore end
 
@endspecial 1559 -996 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.89
neg 6.8 6.104 .5 Frame  end


@endspecial Fd(n)1518 -1253 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 33.42397 8.98999 .5 Frame  end


@endspecial Fb(\()p Fa(\000)p Fb(5)p Fe(;)g Fb(1\))0
0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 142.26532 142.26532 170.71838 113.81226  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap
stroke  grestore end
 
@endspecial 1232 -996
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.27199
neg 6.128 6.104 .5 Frame  end
 
@endspecial Fd(y)1077 -1253
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.98999 .5 Frame  end
 
@endspecial Fb(\(5)p Fe(;)g
Fb(0\))1417 -945 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial 30 x @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 0.8 0.8 .5 Frame  end
 
@endspecial 520 -945 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 920 -975
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.98386 .5 Frame  end
 
@endspecial Fc(2)0 0 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 85.35919 28.45306 56.90613 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 614 -378 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.89
neg 6.8 6.104 .5 Frame  end


@endspecial Fd(n)548 -116 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 39.42397 8.82799 .5 Frame  end


@endspecial Fb(\()p Fa(\000)p Fb(10)p Fe(;)g Fb(1\))0
0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 28.45306 28.45306 56.90613 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 287 -398 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.27199
neg 6.128 6.104 .5 Frame  end
 
@endspecial Fd(y)108 -116
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 31.79198 8.82799 .5 Frame  end
 
@endspecial Fb(\(10)p Fe(;)g
Fb(0\))472 -472 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial -31 x @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 0.8 0.8 .5 Frame  end
 
@endspecial 0 0 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 199.17145 28.45306 170.71838 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end


@endspecial 1559 -378 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.89
neg 6.8 6.104 .5 Frame  end
 
@endspecial
Fd(n)1486 -116 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 41.05595 8.82799 .5 Frame  end
 
@endspecial
Fb(\()p Fa(\000)p Fb(1)p Fe(;)g Fa(\000)p Fb(1\))0 0
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 142.26532 28.45306 170.71838 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 1232 -398 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.27199
neg 6.128 6.104 .5 Frame  end
 
@endspecial Fd(y)1077 -116
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end
 
@endspecial Fb(\(3)p Fe(;)g
Fb(3\))1417 -472 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial -31 x @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 0.8 0.8 .5 Frame  end
 
@endspecial 520 -472 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 920 -503
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.98386 .5 Frame  end
 
@endspecial Fc(2)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop
-32891 -32891 32891 32891 9323500 0 22376400
 0 -1181 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 -1181 a 1181 x @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 312.9837 85.35919 227.62451 113.81226  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 2267 -852 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.99799
neg 8.69598 8.642 .5 Frame  end


@endspecial Fd(S)2495 -588 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end


@endspecial Fb(\(0)p Fe(;)17 b Fb(0\))0 0 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 142.26532 85.35919 227.62451 113.81226  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 1444 -852 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.99799
neg 9.068 8.642 .5 Frame  end


@endspecial -2 w Fd(C)1890 -945 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.4 SLW 0  setgray  0.0 0.0 1.42265 .5 CLW
mul sub 0 360 arc closepath gsave 0.4 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 1865
-983 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.0 2 div 8.18385 0.0
add 2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360
arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fc(1)0
0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62451 56.90613 142.26532 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 1559 -615
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.96199
neg 6.8 8.82799 .5 Frame  end
 
@endspecial Fb(3)0 0 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 56.90613 56.90613 142.26532 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 754 -614 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.82799 .5 Frame  end


@endspecial(1)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 142.26532 56.90613 142.26532 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial
1204 -557 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.82799 .5 Frame  end
 
@endspecial(2)1181
-709 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial 1156 -747 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.0 2 div 8.18385 0.0
add 2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360
arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end


@endspecial Fc(1)520 -472 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
47 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 47 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 48 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 1181 -503 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial
0 0 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 85.35919 28.45306 56.90613 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 614 -379
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.96199
neg 6.8 8.82799 .5 Frame  end
 
@endspecial Fb(3)605 -116
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end
 
@endspecial(\(1)p Fe(;)g
Fb(0\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 28.45306 28.45306 56.90613 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 281
-378 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.82799 .5 Frame  end
 
@endspecial(1)132 -116
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end
 
@endspecial(\(0)p Fe(;)g
Fb(0\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 56.90613 28.45306 56.90613 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 496
-321 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.82799 .5 Frame  end
 
@endspecial(2)369 -116
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end
 
@endspecial(\(0)p Fe(;)g
Fb(1\))472 -472 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial -31 x @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 0 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 170.71838 28.45306 142.26532 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end


@endspecial 1322 -379 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.96199
neg 6.8 8.82799 .5 Frame  end
 
@endspecial(3)1314
-116 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end
 
@endspecial(\(0)p Fe(;)g
Fb(1\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 113.81226 28.45306 142.26532 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 990
-378 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.82799 .5 Frame  end
 
@endspecial(1)841 -116
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end
 
@endspecial(\(1)p Fe(;)g
Fb(0\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 142.26532 28.45306 142.26532 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 1204
-321 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.82799 .5 Frame  end
 
@endspecial(2)1077
-116 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end
 
@endspecial(\(0)p Fe(;)g
Fb(0\))1181 -472 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial 1084 -511 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.0 2 div 8.18385 0.0
add 2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360
arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fc(2)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 256.07758 28.45306 227.62451 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end


@endspecial 2031 -379 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.96199
neg 6.8 8.82799 .5 Frame  end
 
@endspecial
Fb(3)2022 -116 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end
 
@endspecial(\(0)p
Fe(;)g Fb(0\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 199.17145 28.45306 227.62451 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial
1699 -378 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.82799 .5 Frame  end
 
@endspecial(1)1550
-116 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end
 
@endspecial(\(0)p Fe(;)g
Fb(1\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62451 28.45306 227.62451 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 1913
-321 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.82799 .5 Frame  end
 
@endspecial(2)1786
-116 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 2.93
neg 25.79198 8.82799 .5 Frame  end
 
@endspecial(\(1)p Fe(;)g
Fb(0\))1890 -472 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial -31 x @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
