%!PS-Adobe-2.0
%%Creator: dvips(k) 5.94b Copyright 2004 Radical Eye Software
%%Title: A3sol.dvi
%%CreationDate: Thu Dec 04 01:48:07 2008
%%Pages: 2
%%PageOrder: Ascend
%%BoundingBox: 0 0 595 842
%%DocumentFonts: CMMI12 Times-Roman CMR12 CMSY10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -Ppdf -o A3sol-pics.ps A3sol.dvi
%DVIPSParameters: dpi=8000
%DVIPSSource:  TeX output 2008.12.04:0148
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: alt-rule.pro 0 0
%!
% Patch by TVZ
% Makes dvips files draw rules with stroke rather than fill.
% Makes narrow rules more predictable at low resolutions
% after distilling to PDF.
% May have unknown consequences for very thick rules.
% Tested only with dvips 5.85(k).
TeXDict begin
/QV {
  gsave newpath /ruleY X /ruleX X
  Rx Ry gt
  { ruleX ruleY Ry 2 div sub moveto Rx 0 rlineto Ry }
  { ruleX Rx 2 div add ruleY moveto 0 Ry neg rlineto Rx }
  ifelse
  setlinewidth 0 setlinecap stroke grestore
} bind def
end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def% return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def% return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { { /z DS def } { /z 0 def } ifelse /b ED 0 z DS SD b { 0 z DS
CLW sub SD } if 0 DS z add CLW 4 div sub moveto } def
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
/closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
load } if ] cvx newpath 3 1 roll T exec } def
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!PS-Adobe-2.0
%%Title: Dot Font for PSTricks
%%Creator: Timothy Van Zandt <tvz@Princeton.EDU>
%%Creation Date: May 7, 1993
%% Version 97 patch 1, 99/12/16
%% Modified by Etienne Riga <etienne.riga@skynet.be> - Dec. 16, 1999
%% to add /Diamond, /SolidDiamond and /BoldDiamond
10 dict dup begin
  /FontType 3 def
  /FontMatrix [ .001 0 0 .001 0 0 ] def
  /FontBBox [ 0 0 0 0 ] def
  /Encoding 256 array def
  0 1 255 { Encoding exch /.notdef put } for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
% DG/SR modification end
  /Metrics 13 dict def
  Metrics begin
    /Bullet        1000   def
    /Circle        1000   def
    /BoldCircle    1000   def
    /SolidTriangle 1344   def
    /Triangle      1344   def
    /BoldTriangle  1344   def
    /SolidSquare    886   def
    /Square         886   def
    /BoldSquare     886   def
    /SolidPentagon 1093.2 def
    /Pentagon      1093.2 def
    /BoldPentagon  1093.2 def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /SolidDiamond  1008   def
    /Diamond       1008   def
    /BoldDiamond   1008   def
% DG/SR modification end
    /.notdef 0 def
  end
  /BBoxes 13 dict def
  BBoxes begin
    /Circle        { -550 -550 550 550 } def
    /BoldCircle    /Circle load def
    /Bullet        /Circle load def
    /Triangle      { -571.5 -330 571.5 660 } def
    /BoldTriangle  /Triangle load def
    /SolidTriangle /Triangle load def
    /Square        { -450 -450 450 450 } def
    /BoldSquare    /Square load def
    /SolidSquare   /Square load def
    /Pentagon      { -546.6 -465 546.6 574.7 } def
    /BoldPentagon  /Pentagon load def
    /SolidPentagon /Pentagon load def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /Diamond       { -428.5 -742.5 428.5 742.5 } def
    /BoldDiamond   /Diamond load def
    /SolidDiamond  /Diamond load def
% DG/SR modification end
    /.notdef { 0 0 0 0 } def
  end
  /CharProcs 20 dict def
  CharProcs begin
    /Adjust {
      2 copy dtransform floor .5 add exch floor .5 add exch idtransform
      3 -1 roll div 3 1 roll exch div exch scale
    } def
    /CirclePath    { 0 0 500 0 360 arc closepath } def
    /Bullet        { 500 500 Adjust CirclePath fill } def
    /Circle        { 500 500 Adjust CirclePath .9 .9 scale CirclePath
                     eofill } def
    /BoldCircle    { 500 500 Adjust CirclePath .8 .8 scale CirclePath
                     eofill } def
    /BoldCircle    { CirclePath .8 .8 scale CirclePath eofill } def
    /TrianglePath  { 0  660 moveto -571.5 -330 lineto 571.5 -330 lineto
                     closepath } def
    /SolidTriangle { TrianglePath fill } def
    /Triangle      { TrianglePath .85 .85 scale TrianglePath eofill } def
    /BoldTriangle  { TrianglePath .7 .7 scale TrianglePath eofill } def
    /SquarePath    { -450 450 moveto 450 450 lineto 450 -450 lineto
                     -450 -450 lineto closepath } def
    /SolidSquare   { SquarePath fill } def
    /Square        { SquarePath .89 .89 scale SquarePath eofill } def
    /BoldSquare    { SquarePath .78 .78 scale SquarePath eofill } def
    /PentagonPath  {
      -337.8 -465   moveto
       337.8 -465   lineto
       546.6  177.6 lineto
         0    574.7 lineto
      -546.6  177.6 lineto
      closepath
    } def
    /SolidPentagon { PentagonPath fill } def
    /Pentagon      { PentagonPath .89 .89 scale PentagonPath eofill } def
    /BoldPentagon  { PentagonPath .78 .78 scale PentagonPath eofill } def
% DG/SR modification begin - Dec. 16, 1999 - From Etienne Riga
    /DiamondPath   { 0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto
                     428.5 0 lineto closepath } def
    /SolidDiamond  { DiamondPath fill } def
    /Diamond       { DiamondPath .85 .85 scale DiamondPath eofill } def
    /BoldDiamond   { DiamondPath .7 .7 scale DiamondPath eofill } def
% DG/SR modification end
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
      Metrics 1 index get exec 0
      BBoxes 3 index get exec
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop
%END pst-dots.pro

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "30 October 2002",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xD0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]/Metrics
exch def dict begin Encoding{exch dup type/integertype ne{pop pop 1 sub
dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get div def}
ifelse}forall Metrics/Metrics currentdict end def[2 index currentdict
end definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{
dup sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1
roll mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def
dup[exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}
if}forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}
def end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/copypage{}N/p 3 def @MacSetUp}N/doclip{
psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll newpath 4 copy 4 2
roll moveto 6 -1 roll S lineto S lineto S lineto closepath clip newpath
moveto}N/endTexFig{end psf$SavedState restore}N/@beginspecial{SDict
begin/SpecialSave save N gsave normalscale currentpoint TR
@SpecialDefaults count/ocount X/dcount countdictstack N}N/@setspecial{
CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs neg 0 rlineto
closepath clip}if ho vo TR hsc vsc scale ang rotate rwiSeen{rwi urx llx
sub div rhiSeen{rhi ury lly sub div}{dup}ifelse scale llx neg lly neg TR
}{rhiSeen{rhi ury lly sub div dup scale llx neg lly neg TR}if}ifelse
CLIP 2 eq{newpath llx lly moveto urx lly lineto urx ury lineto llx ury
lineto closepath clip}if/showpage{}N/erasepage{}N/copypage{}N newpath}N
/@endspecial{count ocount sub{pop}repeat countdictstack dcount sub{end}
repeat grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse

/preview@version(11.83)def

userdict begin/preview-bop-level 0 def/bop-hook{/preview-bop-level
dup load dup 0 le{/isls false def/vsize 792 def/hsize 612 def}if 1
add store}bind def/eop-hook{/preview-bop-level dup load dup 0 gt{1
sub}if store}bind def end

/preview@tightpage true def (compatibility PostScript comment for dvipng<=1.5

userdict begin/bop-hook{7{currentfile token not{stop}if 65781.76 div
DVImag mul}repeat 72 add 72 2 copy gt{exch}if 4 2 roll neg 2 copy lt{exch}if
dup 0 gt{pop 0 exch}{exch dup 0 lt{pop 0}if}ifelse 720 add exch 720
add 3 1 roll 4{5 -1 roll add 4 1 roll}repeat <</PageSize[5 -1 roll
6 index sub 5 -1 roll 5 index sub]/PageOffset[7 -2 roll [1 1 dtransform
exch]{0 ge{neg}if exch}forall]>>setpagedevice//bop-hook exec}bind def
end

userdict (some extra code to avoid dvipng>=1.6 unknown special: 7{currentfile token not{stop}if 65781.76 div }))
pop

userdict begin/bop-hook{preview-bop-level 0 le{7{currentfile token
not{stop}if 65781.76 div DVImag mul}repeat 72 add 72 2 copy gt{exch}if
4 2 roll neg 2 copy lt{exch}if dup 0 gt{pop 0 exch}{exch dup 0 lt{pop
0}if}ifelse 720 add exch 720 add 3 1 roll 4{5 -1 roll add 4 1 roll}repeat
<</PageSize[5 -1 roll 6 index sub 5 -1 roll 5 index sub]/PageOffset[7
-2 roll [1 1 dtransform exch]{0 ge{neg}if exch}forall]>>setpagedevice}if//bop-hook
exec}bind def end
 
@fedspecial end
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC5703711DA090312BA3FC00A08C453C609
C627A8B1550654AD5E22C5F3F3CC8C1C0A6C7ADDAB55016A76EC46213FD9BAAF
03F7A5FD261BF647FCA5049118033F809370A84AC3ADA3D5BE032CBB494D7851
A6242E785CCC20D81FC5EE7871F1E588DA3E31BD321C67142C5D76BC6AC708DF
C21616B4CC92F0F8B92BD37A4AB83E066D1245FAD89B480CB0AC192D4CAFA6AD
241BD8DF7AD566A2022FBC67364AB89F33608554113D210FE5D27F8FB1B2B78A
F22EC999DBAAFC9C60017101D5FB2A3B6E2BF4BE47B8E5E4662B8C41AB471DFC
A31EE1
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR12
%!PS-AdobeFont-1.1: CMR12 1.0
%%CreationDate: 1991 Aug 20 16:38:05
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 40 /parenleft put
dup 41 /parenright put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 53 /five put
readonly def
/FontBBox{-34 -251 988 750}readonly def
/UniqueID 5000794 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF4E9D2405B169CD5365D6ECED5D768D66D6C
68618B8C482B341F8CA38E9BB9BAFCFAAD9C2F3FD033B62690986ED43D9C9361
3645B82392D5CAE11A7CB49D7E2E82DCD485CBA04C77322EB2E6A79D73DC194E
59C120A2DABB9BF72E2CF256DD6EB54EECBA588101ABD933B57CE8A3A0D16B28
51D7494F73096DF53BDC66BBF896B587DF9643317D5F610CD9088F9849126F23
DDE030F7B277DD99055C8B119CAE9C99158AC4E150CDFC2C66ED92EBB4CC092A
AA078CE16247A1335AD332DAA950D20395A7384C33FF72EAA31A5B89766E635F
45C4C068AD7EE867398F0381B07CB94D29FF097D59FF9961D195A948E3D87C31
821E9295A56D21875B41988F7A16A1587050C3C71B4E4355BB37F255D6B237CE
96F25467F70FA19E0F85785FF49068949CCC79F2F8AE57D5F79BB9C5CF5EED5D
9857B9967D9B96CDCF73D5D65FF75AFABB66734018BAE264597220C89FD17379
26764A9302D078B4EB0E29178C878FD61007EEA2DDB119AE88C57ECFEF4B71E4
140A34951DDC3568A84CC92371A789021A103A1A347050FDA6ECF7903F67D213
1D0C7C474A9053866E9C88E65E6932BA87A73686EAB0019389F84D159809C498
1E7A30ED942EB211B00DBFF5BCC720F4E276C3339B31B6EABBB078430E6A09BB
377D3061A20B1EB98796B8607EECBC699445EAA866C38E02DF59F5EDD378303A
0733B90E7835C0AAF32BA04F1566D8161EA89CD4D14DDB953F8B910BFC8A7F03
5020F55EF8FC2640ADADA156F6CF8F2EB6610F7EE8874A26CBE7CD154469B9F4
ED76886B3FB679FFDEB59BB6C55AF7087BA48B75EE2FB374B19BCC421A963E15
FE05ECAAF9EECDF4B2715010A320102E6F8CCAA342FA11532671C7C4DAFC5AA7
E5E7238BDE3D0B9D54F1D91A01DDEFA66062A6BF7A2FC08499336E15E88F6B2C
804971B5C5A0D10A14DEC5677F3C90E4F5F490C1CE396A55FB4902548B8399F2
C50223D94C037878B68607B6C04CCD9BFD1EBAB92D14036E14CD20A839F69B6D
4EB871094917E6E81B92F066AA68022C90AA1F4A77200EEF45EF2799358D1293
D71CA25C4554C408A6FF62570115C9E7962B974209262D138A9967F1DF68BCE5
90A773625E54DE560D47156CC69736C9378DFBA6305C298C87D6E1F1187E5FF8
166324A22B6970D4F01D89077F1C60E5CF7DA7C63293BB01A1A0FAD32C0833DF
3E0C584D833E842C3DD796938971BCB938D584A08FB2A0B4807633A0022003B0
1AA9163A42CB762FE83A74FE3F0E9B10DC5FB010FA0DE17B13BDBFCA5C7EE93D
126522361A07CBFBC005D4C3B830A02078954197E250209B7976B20E42705E97
6CD0B48C849B487926C735778B8213482C62537EBC988B29D7177A848FC9E6D1
735789DCA1D9364F3392CB8E6FC5C482FD5D1FC0090EF286EE0FB88EB86CA716
601DCDBAD1E4B1577DCDADB3126FF5B7D128BB356CD20538A17F925F1455D8BA
CAF2B1C5FFAE0F9D72A962A80083234423FF99E8C7353F651D2C4446CE08FB61
59F3507DED48B4D41F8E517264310C4BDED4439DE6905BE8EEECCC73A7318F70
1FB0071DE776760FE1485912220985BA237CF0F0B28FB261B8D1B40544C80F3A
A3BB96B198A120C071195653136152017E88B8A99A8E443A06167740D8716B54
A6760784796C0D06A96B6A883A43BB109D5A1D4BD10BE3A8E998063B5A285E90
40B3EE5F82E5F2EC44795C4FECA23EFA3EF0839CEE82FE98E11740E59D23A7F4
98B6EFDBCBBA230DBBFE5B986E2CB6C8D7BFFC38C1A1379A9717B90ECD9EA520
FD6B69C741CFE988110EFE3F4C3A63EB28E4AC532EF7A7137F0F3E2D5B9B2B11
27CEA363CA42D7D8B5FD04899ACB922EC9CE4F1313D4835976C2CAC0FA2A7944
0DDC207DEC040BF5395F6BEB9975819DDF08EDEF4230395489549D373DCEA9E3
57CC73912CF5192E6D379D51D82FB812614123A11AAD2018EA2C84739836CC97
BD0499EA94DBE335D4114529700DAE92D4B6364097ABAB1749D857F771323441
AF60E6B8B31608F42539CCAEE371D369DBDC4A6389609706E8895FA3DC58DE8F
CC45AED358ADD8D4349D5EC5A2561AFDC806B7BF464D6E9271DB3730BF838924
47A1BBD87B6995BE0EC05082374D975B2A77CD795C40889D22ED2619AC7233BB
B0B86A1FBD6DEBF75F48D8492577D52E193D33B8604A41D484CE29C92BA3BFAB
F485B824BCAF7677401DEF8A55D685EE1737740FBDB0CB5DD68903C274C1658B
6DD9A2C9E5D96E46E8594FDAF7EDD169F1EE512DA1C275AE9BC781D9CA031F6A
311035A7CBC2B07A34DB327F572F50F2984BC838FF640BB5CC8F52CDC8AC655E
AD4F94D1A6AE986FF4752FDECE8C87F69F6E3C01F3CBF59F6A8877CA32990488
30891F15231C8B1BDF97D87A6F3532EEFCE1AF9091489B803AA5FF8FCE9A2F66
893178558B7412B4238AD7B6AF7F9446ECF78AB7D93B405798B416426471EEDB
EED2FBE17D1CE9166065048BFC9A168361D8B1B73E344CBBC102069D5AD9357A
EB1A9E0AECD570C0620BC9C3D6BADDBF5541F11B95285DF7B4604A6EC6DF99A9
4EC6B9CA60BF6D005F2D61D77945E922387B6D1394E2978F04EF85D39A71E52B
49C54287D138D3DC1298D2E7BB633E21393F5FDDDD52A304DA5A70F1123F8984
A06C21AE2CE6B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI12
%!PS-AdobeFont-1.1: CMMI12 1.100
%%CreationDate: 1996 Jul 27 08:57:55
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 59 /comma put
dup 67 /C put
dup 71 /G put
dup 82 /R put
dup 83 /S put
dup 103 /g put
dup 110 /n put
dup 114 /r put
dup 121 /y put
readonly def
/FontBBox{-30 -250 1026 750}readonly def
/UniqueID 5087386 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D6A8F05B47AF95EF28A9C561DBDC98C47CF5
5250011D19E9366EB6FD153D3A100CAA6212E3D5D93990737F8D326D347B7EDC
4391C9DF440285B8FC159D0E98D4258FC57892DCC57F7903449E07914FBE9E67
3C15C2153C061EB541F66C11E7EE77D5D77C0B11E1AC55101DA976CCACAB6993
EED1406FBB7FF30EAC9E90B90B2AF4EC7C273CA32F11A5C1426FF641B4A2FB2F
4E68635C93DB835737567FAF8471CBC05078DCD4E40E25A2F4E5AF46C234CF59
2A1CE8F39E1BA1B2A594355637E474167EAD4D97D51AF0A899B44387E1FD933A
323AFDA6BA740534A510B4705C0A15647AFBF3E53A82BF320DD96753639BE49C
2F79A1988863EF977B800C9DB5B42039C23EB86953713F730E03EA22FF7BB2C1
D97D33FD77B1BDCC2A60B12CF7805CFC90C5B914C0F30A673DF9587F93E47CEA
5932DD1930560C4F0D97547BCD805D6D854455B13A4D7382A22F562D7C55041F
0FD294BDAA1834820F894265A667E5C97D95FF152531EF97258F56374502865D
A1E7C0C5FB7C6FB7D3C43FEB3431095A59FBF6F61CEC6D6DEE09F4EB0FD70D77
2A8B0A4984C6120293F6B947944BE23259F6EB64303D627353163B6505FC8A60
00681F7A3968B6CBB49E0420A691258F5E7B07B417157803FCBE9B9FB1F80FD8
CA0A265B570BA294792DD2FC75CE2C83DCC225B902551DBD11E687EAC6E85D2B
02C28359A40AE66A6A6A8862CB17815B41E280313F0EFAA9981755611F7F683D
35603984D60BB0C772054355A97A5E03C689E23B04DA79080CE4579CC90EF38B
1A64CDD92B907AE83192C3C46C5FC40BB412F6656DC6349E6D29B5936DCE94CB
98E3B465FFF7574095F57BB3750F1A55F20456933FCA64CC1B060E260782BEF6
721D38BF65DF1F1DA5439DBC802B4A9D803BD635C05B9ACA4D26C28195A1F4C4
CC623B30B076D4861E89B93E2CF26F6DF07199C03BA5466FA3EFBD7F77EFE068
E55B7186855063934C5716EDC3F5056BDA963B6B933B546475BCFF91C512F411
8D14B1C32C9735281E536F87ADBF1AD9AA04D7DE2096413AB8B3C9E8B1F6F338
3B80D637D761A7A992CF58188FB0A04FD6C6886A60F27EF31C45E92F4717D8FB
D4A0844A8D9036D5F2BBCA2C170F3042F22DEB8D151C7135AB91DA289886604B
70B9F2A25A7D576FA1D70DC935CDD3E81915E9BE11CB03C9FDCFDE3700BDDAAE
D61CD52A78B075FF4FB8BE949FCC4B04813776A3451FE65A47D57D7B66499E99
B97C5141D2E05BA86C59535C34BA975381F96A4EC47EA032C6BEEF9F2E6565A0
0712528976CD8864AB7CE23653D84B5D66F52B53ADB6CEBA4024F484C7DB36A8
41F1C71CB8627476F341AEB22F4E871755911D8FAEA73E35EB7835FA1C6CF0DF
3854E69FFCADE0B164434F0C56F6AEFFAA65D21013B145AC0F97C6B0A86284D5
B10787A4775A7C08F3776B20C5900D6C452937B11FA74B068829EE2C58BF09D3
0DFEB19A02D18CA44689E5DB6989AFBA4F271732429D0E7D2F25A4CDA2190A7C
4E460DE4907106CCB1E7978E9C522546537C041FE1C7F4963344C2A01874EBC1
20B8A728EC0011B6E29D37890850AD921A5A247FA60A89A2EF6AB95CAE1FB11A
0A489F009011D8521AA0973726324DA80D2E65A551DCB526EA607D683CB06BEF
CF1351D69FAE9FE64CC0B9D2C4B1B2010FA260814ABA63E4769A7AE647B84EFF
C9AD9546E448088E74B02B7D84C28D9FBFF3E419C6D485A9132C88443C22428D
09136D5D9C3BB12E3E78CA8B18F92DEA8A8C92530BF94D2A47DDF31D27B32158
6B07E360CE6FA067F115CCA000FFEB2317EB90B871BAAFA9575354A5D255B487
CD47058A538EF69A2CE73B185B901C0706327B71C30B428B9B38D44B5D1A688E
753FCD50FD68951933B4F25B0D21933EDCF517FBA2D83CEE43CA3579AE9FF7DB
2A96200E967877A650D8FC8879FECC80ED779F021A0BD2A6A6165998095EE299
9A8D37FB827C4B670FED1E092440638ECCC5E4E70C44B6C435A8AB45AF475080
F75CE2ECF20CF4B420BEF7B878BD5C3BCBCF54C73A49C5A0E82E9304B93FE7D1
193F76F81A7E17FCD69B1B2540D6997411D8EFC3B1D89607FF09619C98098495
50463764C4403D3994C9CE1477F7ADFF26F355DAD5E117460EF9F6816FC6E36E
5D020C40B1558B30805B4928EE5839B55A49E224C4D60985C60270FCB2BCF292
DF6D7D132199085ABF8499F9F3309DDCFFD008184A1967BEC946AFA71C6E9709
416394E5ACF711C87558E9FAD897D30940BB4D67917832C96C122341AC439CA0
632E9440C4CC56524B435E65DF8E1DDB12D8DF556AD1165733157885EC579F50
F52F1B0D62A56811882E281E14DF349F8DAEAA2398287DCD1B361D3ED6B0EA4F
E04FEA861022622D8C350175EDD08F4AB3928A3392994431C522936185CD0216
0804E960CE142EF66C700B7515280CC545A6C01D7B5FD6FBC0CF1910A4AE3D6D
796F6D89BE6CE53E94C160557B9F28C31AF80978CB0C024CA5BE49D5507EDBCE
64C7C8A03BA34230073107D89D179373549F3D3DC9485B012B2E705C864DA005
BD3493B5171E87D78892CEB20081A989A4B2128D640227295581990FF5898B9C
65055138089857F40456D74BE3F473D3B8322AAC50DC015A070B6D511C3D0991
1F9D657CFF9F7CC00C765FB4E4E4CAA4963946C8075C3B1083ED98A64DEB1E05
A3F92DCD11488DAD09FDEC3237B324D14B85A990C761FA2D376BDFFBCFE162AB
5B5F6823BF5E5DD535B534FAB59D38326FAF51539F4261D04C566EACD2027736
19B20F390B56F60E0FD6655C302D0F29E069873EED9776B13029670FD44B45A2
66B65EB2D6E2605504F759C55523D89C4CB65BB0A4B5FB3961D929BB931F850B
0410AC3A4F1C0A17A29E46F870885B59C9202647CF3D30E16CA605C6525B8309
65D9FB1636EC0D5220258717473B22D0D76906260CDF9010EAB133CDAC412633
0750DF881A63B3AC2FB5FA54EC093D39E625993426DA12F15D433F9DCB28528C
26A30512F0C578EE7AA1D0E12FA4849E47157113F3E2A1398F2D2B8A184D4D02
FC6DBC5DE3092554978F34CB331F027E86E12E4672E160AF9E1D8511F24AD202
4796ADFE2FDF629582D4162AFFB9AE114B61DE57D8CA02C698E3035C2536CC28
212421AD7E2255083091EF1EC0CA104CAB46ACC7DA8C513699BCDE2F51989960
34AE9672CB7719E9E614F88C6B2EAC7C7CF6F653CD07D87DE2D48E3747CE46B0
D0E005AB15B3ED4DB3B7433279D9ACE4F7016FAB22E68BA68B2AFE56CF8EB616
00C054C6D4E51F2C2D8B4D71BA544F534AF513FDD77BCA87ACFE546D685CF70B
9050FADA5788FC89614E616CAAE246A6D955163680706590D334E89C3A25CD57
6FD10484E1F4A466C3EF607BA7D55D10CDB5711ED8CC14763341F5DED8BD6EB8
8E3F762A5325B1ABF065F16464F8C4313C97E4B335BBD8D0DF8A2573F119AA09
A1EF020CFD648D4B34F88DFD5952B63FE0B7B15FD65A85D69EEA4B1213721D4B
35D7B083C1DD5131C4A093F8B11D3768385D6ED0F80D605B45B3CEE3D97D6B71
475BB62BCA1FBB56361FD9A4FFDC235D52E814CDD7A183F80D91DB5DDFB22DEF
0A1FF931280DCCA34F5BD517F1016B2CA5311A1427C245A5685224E35F3B58F7
3018AF7DCE90E709F410657C11B3328FD7A37917D6122A566E2D4FF8DCBD6FFF
CBB16581F224AAB425DF738408F261CE6FAB555FB22A87D451B594599A5E654A
C5C15F6CE01D23F353B1CD7BA1B339EA9593CEE28AEEAA97C86106F656C267F5
034497887870DCAF9AD9CAFDE7518627240A5EAAFC4DAE0BCF0168378017F65A
8DE2B333F33C5F9F989094531334B5B8295C09FB88F47B3658EE8E7633F986CD
C2F25CAAA86BA4C2703D7E5B8015EED78EEAFF487E7DA61AE223F9080A70151B
1C5DA4CA0293EE01716A231EF4F57AB0184825A451CA5223A81B5A92B279AC81
B866F01F7C0648E07C529C744B77AC5CD4F5B6F22B62F29C50C2C621ACDB7B1B
95FE92DC1D7AB58244CBAB041EAA61A79C4AE4CD56DF653DDAB87632F023CEC8
625D0C4E6941DB096F63D47BAB7A443DC2021A210F613BF7E9DD2ED4324B2642
3BDD98646C39C7B2A2DCE14D1DC198975710BBBEE76DF8D6B8F1AD55B82005AA
09C6714FE4D7B872D3759F6E5411AEC572783A9DC5FEC45E5B61A4D1729AD39B
3ED72081C33DFD18BE394122C63D65BA6F7B9D118A3E961A789984988CB1B2B5
D9D58FACAAA378A2BFDD87E45EFB8953050B124956CD2CF14A3BDB13A56DCE36
02B918EC70CB1785ACC269F50A97F5E2C5C2BCD7A6CA547F797E6A8ECBF019A8
E7C359879757D91E944B55E06E8F1591BAEA2320B7843B76BCBFD334AE88E3AD
660662DCD9399FE6A96CBB29B3364867181B662F06B7D1711F200F8070357195
FC72DACA8B954DCBF901C56B7D24AD23F1ECF7FCDDD484986A0AE49E55BEED67
C9BD85A8150EA857B1A763ACBAB45FB6DF7CABD63E1B3A5A14C2BD35AA2C3DBA
78B197F945088984931D49A7BAD6C3F0D0BB32296181C84B4B68D5EE0693F0D0
6CC7351FE9FCBB6754CE77496EF36D5EB15067850E9AD0B8F7317879C11C16D6
181FCC9E8FBCD0A572F1B97612CD2A80351ED4B44FB0F093672E248BA1037723
FE6D0667FFE031
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39139632 55387786 1000 8000 8000 (A3sol.dvi)
@start /Fa 255[1033{}1 1328.35 /CMSY10 rf /Fb 202[650
1[650 650 650 650 6[506 506 40[{}7 1328.35 /CMR12 rf
/Fc 205[664 664 49[{ TeXBase1Encoding ReEncodeFont }2
1328.35 /Times-Roman rf /Fd 134[634 6[586 3[776 6[623
19[800 990 10[1026 3[931 7[361 59[{}9 1328.35 /CMMI12
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 8000dpi
TeXDict begin
%%PaperSize: A4
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop
-32891 -32891 32891 32891 11188200 0 14917600
 0 -18898 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 -18898 a 0 -18898
a
SDict begin [ /Producer (dvips + Distiller) /Title () /Subject () /Creator
(LaTeX with hyperref package) /Author () /Keywords () /DOCINFO pdfmark
end
 0 -18898 a 18898 x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 170.71838 85.35919 113.81226 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial
15235 -9758 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 10.06825 9.0 .5 Frame  end
 
@endspecial
Fd(G)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 56.90613 85.35919 113.81226 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 8948
-9758 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 9.8423 9.0 .5 Frame  end
 
@endspecial(R)12599
-9449 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.4 SLW 0  setgray  0.0 0.0 1.42265 .5 CLW
mul sub 0 360 arc closepath gsave 0.4 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 12266 -9852 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.98386 .5 Frame  end
 
@endspecial Fc(1)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 56.90613 56.90613 56.90613 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end


@endspecial 5320 -7717 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.13332
neg 6.85689 5.96667 .5 Frame  end
 
@endspecial
Fd(g)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 56.90613 113.81226 56.90613 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 5368
-10738 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.42148 5.96667 .5 Frame  end
 
@endspecial(r)6299
-9449 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial 5232 -8996 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.98386 .5 Frame  end


@endspecial Fc(1)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 170.71838 56.90613 170.71838 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial
19207 -7717 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.13332
neg 6.85689 5.96667 .5 Frame  end
 
@endspecial
Fd(g)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 170.71838 113.81226 170.71838 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 19207
-10738 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.42148 5.96667 .5 Frame  end
 
@endspecial(r)18898
-9449 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial 19301 -8996 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.98386 .5 Frame  end
 
@endspecial Fc(1)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 85.35919 142.26532 56.90613 113.81226  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end


@endspecial 8183 -13292 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 7.81381 5.96667 .5 Frame  end


@endspecial Fd(n)6968 -16799 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 45.61922 9.8 .5 Frame  end


@endspecial Fb(\()p Fa(\000)p Fb(1)p Fd(;)221 b Fa(\000)p
Fb(1\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 28.45306 142.26532 56.90613 113.81226  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 3734
-13292 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.13332
neg 6.95966 5.96667 .5 Frame  end
 
@endspecial Fd(y)1702
-16799 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial Fb(\(3)p
Fd(;)g Fb(3\))6299 -12599 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial 404
x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 0.8 0.8 .5 Frame  end
 
@endspecial 0 0 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 199.17145 142.26532 170.71838 113.81226  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap
stroke  grestore end
 
@endspecial 20782 -13292 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 7.81381 5.96667 .5 Frame  end
 
@endspecial Fd(n)20083 -16799 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 36.28586 9.8 .5 Frame  end
 
@endspecial Fb(\()p Fa(\000)p Fb(5)p Fd(;)g
Fb(1\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 142.26532 142.26532 170.71838 113.81226  /Lineto
/lineto load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap
stroke  grestore end
 
@endspecial 16332
-13292 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.13332
neg 6.95966 5.96667 .5 Frame  end
 
@endspecial Fd(y)14301
-16799 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial Fb(\(5)p
Fd(;)g Fb(0\))18898 -12599 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial 404
x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 0.8 0.8 .5 Frame  end
 
@endspecial 6929 -12599
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 629 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 12266 -13002 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.98386 .5 Frame  end


@endspecial Fc(2)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 85.35919 28.45306 56.90613 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial
8183 -5033 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 7.81381 5.96667 .5 Frame  end
 
@endspecial Fd(n)7160
-1435 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 42.1608 9.8 .5 Frame  end
 
@endspecial Fb(\()p
Fa(\000)p Fb(10)p Fd(;)g Fb(1\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 28.45306 28.45306 56.90613 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end


@endspecial 3734 -5292 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.13332
neg 6.95966 5.96667 .5 Frame  end
 
@endspecial
Fd(y)1377 -1435 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 32.82744 9.8 .5 Frame  end
 
@endspecial
Fb(\(10)p Fd(;)g Fb(0\))6299 -6299 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial -404
x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 0.8 0.8 .5 Frame  end
 
@endspecial 0 0 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 199.17145 28.45306 170.71838 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 20782 -5033 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 7.81381 5.96667 .5 Frame  end
 
@endspecial Fd(n)19567 -1435 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 45.61922 9.8 .5 Frame  end
 
@endspecial Fb(\()p Fa(\000)p Fb(1)p Fd(;)g
Fa(\000)p Fb(1\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 142.26532 28.45306 170.71838 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial
16332 -5292 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.13332
neg 6.95966 5.96667 .5 Frame  end
 
@endspecial
Fd(y)14301 -1435 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial
Fb(\(3)p Fd(;)g Fb(3\))18898 -6299 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial -404
x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 0.8 0.8 .5 Frame  end
 
@endspecial 6929 -6299 a
@beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 629 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 12266 -6703 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.8 8.98386 .5 Frame  end


@endspecial Fc(2)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop
-32891 -32891 32891 32891 9323500 0 22376400
 0 -15748 a
SDict begin /product where{pop product(Distiller)search{pop pop pop
version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto
closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show
grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 -15748 a 15748 x @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 312.9837 85.35919 227.62451 113.81226  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 30231 -11333 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 8.72493 9.0 .5 Frame  end
 
@endspecial Fd(S)33199 -7734 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial Fb(\(0)p Fd(;)221 b Fb(0\))0
0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 142.26532 85.35919 227.62451 113.81226  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 19138 -11333
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 10.06824 9.0 .5 Frame  end
 
@endspecial Fd(C)25197 -12599
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.4 SLW 0  setgray  0.0 0.0 1.42265 .5 CLW
mul sub 0 360 arc closepath gsave 0.4 SLW 0  setgray 0 setlinecap stroke
 grestore end
 
@endspecial 24865 -13111 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.0 2 div 8.18385 0.0
add 2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360
arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fc(1)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62451 56.90613 142.26532 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end


@endspecial 20782 -8183 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end


@endspecial Fb(3)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 56.90613 56.90613 142.26532 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial
10064 -8183 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end
 
@endspecial(1)0
0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 142.26532 56.90613 142.26532 85.35919  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 16057 -7446
a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end
 
@endspecial(2)15748 -9449
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial 15416 -9961 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.0 2 div 8.18385 0.0
add 2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360
arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fc(1)6929 -6299 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 629 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 629 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end


@endspecial 630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial
630 w @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 630 w @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 0.71132 SD 
end
 
@endspecial 15748 -6703 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 0 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 85.35919 28.45306 56.90613 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end


@endspecial 8183 -5033 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end
 
@endspecial
Fb(3)8001 -1435 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial(\(1)p
Fd(;)g Fb(0\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 28.45306 28.45306 56.90613 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial
3765 -5033 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end
 
@endspecial(1)1702
-1435 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial(\(0)p
Fd(;)g Fb(0\))0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 56.90613 28.45306 56.90613 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial
6608 -4296 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end
 
@endspecial(2)4852
-1435 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial(\(0)p
Fd(;)g Fb(1\))6299 -6299 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end


@endspecial @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial -404
x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end
 
@endspecial 0 0 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 170.71838 28.45306 142.26532 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 17632 -5033 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end
 
@endspecial(3)17450 -1435 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial(\(0)p Fd(;)g Fb(1\))0 0 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 113.81226 28.45306 142.26532 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 13214 -5033 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end
 
@endspecial(1)11151 -1435 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial(\(1)p Fd(;)g Fb(0\))0 0 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 142.26532 28.45306 142.26532 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 16057 -4296 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end
 
@endspecial(2)14301 -1435 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial(\(0)p Fd(;)g Fb(0\))15748 -6299
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial 14451 -6812 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  6.0 2 div 8.18385 0.0
add 2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360
arc closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore
end
 
@endspecial Fc(2)0 0 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 256.07758 28.45306 227.62451 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end


@endspecial 27081 -5033 a @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end


@endspecial Fb(3)26899 -1435 y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end


@endspecial(\(0)p Fd(;)g Fb(0\))0 0 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 199.17145 28.45306 227.62451 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 22663 -5033 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end
 
@endspecial(1)20600 -1435 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial(\(0)p Fd(;)g Fb(1\))0 0 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  /ArrowA { moveto } def
/ArrowB { } def [ 227.62451 28.45306 227.62451 56.90613  /Lineto /lineto
load def false Line  gsave 0.8 SLW 0  setgray 0 setlinecap stroke 
grestore end
 
@endspecial 25506 -4296 a @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 0.8
neg 6.67494 8.53333 .5 Frame  end
 
@endspecial(2)23750 -1435 y @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0. true 0.8 neg 3.8
neg 26.9525 9.8 .5 Frame  end
 
@endspecial(\(1)p Fd(;)g Fb(0\))25197 -6299
y @beginspecial @setspecial
 tx@Dict begin STP newpath 0.0 SLW 1  setgray  0. true 1.0 neg 1.0
neg 1.0 1.0 .5 Frame  gsave 1  setgray fill grestore end
 
@endspecial @beginspecial
@setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 0.0 1.42265 SD 
end
 
@endspecial -404 x @beginspecial @setspecial
 tx@Dict begin STP newpath 0.8 SLW 0  setgray  0.0 2 div 0.0 0.0 add
2 div 2 copy 0.0 sub 4 2 roll Pyth 0.0 add CLW 2 div add 0 360 arc
closepath gsave 0.8 SLW 0  setgray 0 setlinecap stroke  grestore end


@endspecial eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
